1.Phong	DownLoadFile
			using System;
			using System.Collections.Generic;
			using System.Linq;
			using System.Web;
			using System.IO;
			using HotelBaseSystem.DBUtility;

			namespace HotelBaseSystem.Common
			{
				/// <summary>
				/// ファイルをダウンロード
				/// </summary>
				public class DownLoadFile : BaseFile
				{
					/// <summary>
					/// byte[]を取得する
					/// </summary>
					/// <param name="filename"></param>
					/// <returns></returns>
					public byte[] getBinaryFile(string filename)
					{
						filename = GetFileRootPath(PathType.PlanMST) + "\\" + filename;
						byte[] temp = null;
						if (File.Exists(filename))
						{
							FileStream stream = null;
							try
							{
								stream = File.OpenRead(filename);
								temp = ConvertStreamToByteBuffer(stream);
								stream.Close();
							}
							catch (Exception e)
							{
								if (stream != null)
								{
									stream.Close();
								}
								throw e;
							}
						}
						return temp;
					}
					/// <summary>
					///  byte[]を取得する
					/// </summary>
					/// <param name="filename"></param>
					/// <returns></returns>
					public byte[] getBinaryFileByPath(string filename)
					{

						byte[] temp = null;
						if (File.Exists(filename))
						{
							FileStream stream = null;
							try
							{
								stream = File.OpenRead(filename);
								temp = ConvertStreamToByteBuffer(stream);
								stream.Close();
							}
							catch (Exception e)
							{
								if (stream != null)
								{
									stream.Close();
								}
								throw e;
							}
						}
						return temp;
					}
					/// <summary>
					///  byte[]を取得する
					/// </summary>
					/// <param name="theStream"></param>
					/// <returns></returns>
					public byte[] ConvertStreamToByteBuffer(System.IO.Stream theStream)
					{
						byte[] temp = null;
						int b1;
						System.IO.MemoryStream tempStream = new System.IO.MemoryStream();
						try
						{
							while ((b1 = theStream.ReadByte()) != -1)
							{
								tempStream.WriteByte(((byte)b1));
							}
							temp = tempStream.ToArray();
							tempStream.Close();
						}
						catch(Exception ex)
						{
							tempStream.Close();
							throw ex;
						}
						return temp;

					}
				}
			}
			
2.Phong	DownLoadFile

			using System;
			using System.Collections.Generic;
			using System.Linq;
			using System.Web;
			using System.IO;
			using HotelBaseSystem.DBUtility;

			namespace HotelBaseSystem.Common
			{
				/// <summary>
				/// ファイルアップロード
				/// </summary>
				public class UpLoadFile : BaseFile
				{
					/// <summary>
					/// ファイルをアップロードする
					/// </summary>
					/// <param name="fs"></param>
					/// <param name="fileType"></param>
					/// <returns></returns>
					public string UpLoad(byte[] fs, string fileType)
					{
						string path = GetFileRootPath(PathType.PlanMST);
						string FileName = Guid.NewGuid().ToString() + "." + fileType;
						MemoryStream memoryStream = null;
						FileStream fileStream = null;
						try
						{
							memoryStream = new MemoryStream(fs);

							fileStream = new FileStream(path + "\\" + FileName, FileMode.Create);

							memoryStream.WriteTo(fileStream);
							memoryStream.Close();
							fileStream.Close();
							fileStream = null;
							memoryStream = null;
							return FileName;
						}
						catch (Exception ex)
						{
							if (memoryStream != null)
							{
								memoryStream.Close();
								memoryStream = null;
							}
							if (fileStream != null)
							{
								fileStream.Close();
								fileStream = null;
							}
							throw ex;
						}
					}

				}
			}